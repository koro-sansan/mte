//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0

.visible .entry Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0(
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_0,
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_1,
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<217>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_4535143346856003119_kernel0_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %ctaid.x;
	setp.lt.s32	%p1, %r1, 1024;
	shr.s32 	%r5, %r1, 31;
	shr.u32 	%r6, %r5, 22;
	add.s32 	%r7, %r1, %r6;
	and.b32  	%r8, %r7, -1024;
	sub.s32 	%r9, %r1, %r8;
	mul.lo.s32 	%r2, %r9, 6144;
	mov.u32 	%r10, %tid.x;
	shl.b32 	%r3, %r10, 2;
	shr.s32 	%r11, %r10, 31;
	shr.u32 	%r12, %r11, 23;
	add.s32 	%r13, %r10, %r12;
	and.b32  	%r14, %r13, 1073741312;
	sub.s32 	%r15, %r10, %r14;
	shl.b32 	%r4, %r15, 2;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	mad.lo.s32 	%r24, %r1, 6144, %r3;
	mul.wide.s32 	%rd10, %r24, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.nc.v4.f32 	{%f85, %f86, %f87, %f88}, [%rd11];
	mov.f32 	%f82, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f85;}

	// inline asm
	// inline asm
	{sub.f16 %rs111,%rs109,%rs110;
}
	// inline asm
	mov.f32 	%f84, 0fC61C4000;
	// inline asm
	{  cvt.rn.f16.f32 %rs114, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs119, %f86;}

	// inline asm
	// inline asm
	{sub.f16 %rs120,%rs118,%rs119;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs128, %f87;}

	// inline asm
	// inline asm
	{sub.f16 %rs129,%rs127,%rs128;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs132, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f88;}

	// inline asm
	// inline asm
	{sub.f16 %rs138,%rs136,%rs137;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs141, %f84;}

	// inline asm
	add.s32 	%r25, %r2, %r4;
	cvta.to.global.u64 	%rd12, %rd2;
	mul.wide.s32 	%rd13, %r25, 2;
	add.s64 	%rd14, %rd12, %rd13;
	// inline asm
	{mul.f16 %rs142,%rs138,%rs141;
}
	// inline asm
	// inline asm
	{mul.f16 %rs133,%rs129,%rs132;
}
	// inline asm
	// inline asm
	{mul.f16 %rs124,%rs120,%rs123;
}
	// inline asm
	// inline asm
	{mul.f16 %rs115,%rs111,%rs114;
}
	// inline asm
	st.global.v4.u16 	[%rd14], {%rs115, %rs124, %rs133, %rs142};
	ld.global.nc.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd11+8192];
	// inline asm
	{  cvt.rn.f16.f32 %rs145, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f89;}

	// inline asm
	// inline asm
	{sub.f16 %rs147,%rs145,%rs146;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs154, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f90;}

	// inline asm
	// inline asm
	{sub.f16 %rs156,%rs154,%rs155;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs163, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs164, %f91;}

	// inline asm
	// inline asm
	{sub.f16 %rs165,%rs163,%rs164;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs168, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs172, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs173, %f92;}

	// inline asm
	// inline asm
	{sub.f16 %rs174,%rs172,%rs173;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs177, %f84;}

	// inline asm
	// inline asm
	{mul.f16 %rs178,%rs174,%rs177;
}
	// inline asm
	// inline asm
	{mul.f16 %rs169,%rs165,%rs168;
}
	// inline asm
	// inline asm
	{mul.f16 %rs160,%rs156,%rs159;
}
	// inline asm
	// inline asm
	{mul.f16 %rs151,%rs147,%rs150;
}
	// inline asm
	st.global.v4.u16 	[%rd14+4096], {%rs151, %rs160, %rs169, %rs178};
	ld.global.nc.v4.f32 	{%f93, %f94, %f95, %f96}, [%rd11+16384];
	// inline asm
	{  cvt.rn.f16.f32 %rs181, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs182, %f93;}

	// inline asm
	// inline asm
	{sub.f16 %rs183,%rs181,%rs182;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs186, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs190, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs191, %f94;}

	// inline asm
	// inline asm
	{sub.f16 %rs192,%rs190,%rs191;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs195, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs199, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs200, %f95;}

	// inline asm
	// inline asm
	{sub.f16 %rs201,%rs199,%rs200;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs204, %f84;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs208, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs209, %f96;}

	// inline asm
	// inline asm
	{sub.f16 %rs210,%rs208,%rs209;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs213, %f84;}

	// inline asm
	// inline asm
	{mul.f16 %rs214,%rs210,%rs213;
}
	// inline asm
	// inline asm
	{mul.f16 %rs205,%rs201,%rs204;
}
	// inline asm
	// inline asm
	{mul.f16 %rs196,%rs192,%rs195;
}
	// inline asm
	// inline asm
	{mul.f16 %rs187,%rs183,%rs186;
}
	// inline asm
	st.global.v4.u16 	[%rd14+8192], {%rs187, %rs196, %rs205, %rs214};
	bra.uni 	BB0_3;

BB0_1:
	add.s32 	%r16, %r1, -1024;
	shr.s32 	%r17, %r16, 31;
	shr.u32 	%r18, %r17, 22;
	add.s32 	%r19, %r16, %r18;
	and.b32  	%r20, %r19, -1024;
	sub.s32 	%r21, %r16, %r20;
	add.s32 	%r22, %r2, %r3;
	mul.wide.s32 	%rd5, %r22, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.nc.v4.f32 	{%f37, %f38, %f39, %f40}, [%rd6];
	mov.f32 	%f34, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f37;}

	// inline asm
	// inline asm
	{sub.f16 %rs3,%rs1,%rs2;
}
	// inline asm
	mov.f32 	%f36, 0fC61C4000;
	// inline asm
	{  cvt.rn.f16.f32 %rs6, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs10, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs11, %f38;}

	// inline asm
	// inline asm
	{sub.f16 %rs12,%rs10,%rs11;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs15, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f39;}

	// inline asm
	// inline asm
	{sub.f16 %rs21,%rs19,%rs20;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f40;}

	// inline asm
	// inline asm
	{sub.f16 %rs30,%rs28,%rs29;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f36;}

	// inline asm
	mad.lo.s32 	%r23, %r21, 6144, %r4;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r23, 2;
	add.s64 	%rd9, %rd7, %rd8;
	// inline asm
	{mul.f16 %rs34,%rs30,%rs33;
}
	// inline asm
	// inline asm
	{mul.f16 %rs25,%rs21,%rs24;
}
	// inline asm
	// inline asm
	{mul.f16 %rs16,%rs12,%rs15;
}
	// inline asm
	// inline asm
	{mul.f16 %rs7,%rs3,%rs6;
}
	// inline asm
	st.global.v4.u16 	[%rd9], {%rs7, %rs16, %rs25, %rs34};
	ld.global.nc.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd6+8192];
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f41;}

	// inline asm
	// inline asm
	{sub.f16 %rs39,%rs37,%rs38;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f42;}

	// inline asm
	// inline asm
	{sub.f16 %rs48,%rs46,%rs47;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f43;}

	// inline asm
	// inline asm
	{sub.f16 %rs57,%rs55,%rs56;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f44;}

	// inline asm
	// inline asm
	{sub.f16 %rs66,%rs64,%rs65;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f36;}

	// inline asm
	// inline asm
	{mul.f16 %rs70,%rs66,%rs69;
}
	// inline asm
	// inline asm
	{mul.f16 %rs61,%rs57,%rs60;
}
	// inline asm
	// inline asm
	{mul.f16 %rs52,%rs48,%rs51;
}
	// inline asm
	// inline asm
	{mul.f16 %rs43,%rs39,%rs42;
}
	// inline asm
	st.global.v4.u16 	[%rd9+4096], {%rs43, %rs52, %rs61, %rs70};
	ld.global.nc.v4.f32 	{%f45, %f46, %f47, %f48}, [%rd6+16384];
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f45;}

	// inline asm
	// inline asm
	{sub.f16 %rs75,%rs73,%rs74;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f46;}

	// inline asm
	// inline asm
	{sub.f16 %rs84,%rs82,%rs83;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f47;}

	// inline asm
	// inline asm
	{sub.f16 %rs93,%rs91,%rs92;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f36;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f34;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f48;}

	// inline asm
	// inline asm
	{sub.f16 %rs102,%rs100,%rs101;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f36;}

	// inline asm
	// inline asm
	{mul.f16 %rs106,%rs102,%rs105;
}
	// inline asm
	// inline asm
	{mul.f16 %rs97,%rs93,%rs96;
}
	// inline asm
	// inline asm
	{mul.f16 %rs88,%rs84,%rs87;
}
	// inline asm
	// inline asm
	{mul.f16 %rs79,%rs75,%rs78;
}
	// inline asm
	st.global.v4.u16 	[%rd9+8192], {%rs79, %rs88, %rs97, %rs106};

BB0_3:
	ret;
}


