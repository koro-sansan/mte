//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_DropoutGrad_7690496516488269280_kernel0

.visible .entry Fused_DropoutGrad_7690496516488269280_kernel0(
	.param .u64 Fused_DropoutGrad_7690496516488269280_kernel0_param_0,
	.param .u64 Fused_DropoutGrad_7690496516488269280_kernel0_param_1,
	.param .u64 Fused_DropoutGrad_7690496516488269280_kernel0_param_2
)
{
	.reg .b16 	%rs<57>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [Fused_DropoutGrad_7690496516488269280_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_DropoutGrad_7690496516488269280_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_DropoutGrad_7690496516488269280_kernel0_param_2];
	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd2;
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 13;
	mov.u32 	%r3, %tid.x;
	shl.b32 	%r4, %r3, 3;
	add.s32 	%r5, %r4, %r2;
	mul.wide.s32 	%rd6, %r5, 2;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.v4.f32 	{%f9, %f10, %f11, %f12}, [%rd7];
	mov.b32 	 %r6, %f9;
	mov.b32 	 %r7, %f10;
	mov.b32 	 %r8, %f11;
	mov.b32 	 %r9, %f12;
	add.s64 	%rd8, %rd4, %rd6;
	ld.global.nc.v4.f32 	{%f17, %f18, %f19, %f20}, [%rd8];
	mov.b32 	 %r10, %f17;
	mov.b32 	 %r11, %f18;
	mov.b32 	 %r12, %f19;
	mov.b32 	 %r13, %f20;
	mov.f32 	%f8, 0f3FA00000;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f8;}

	// inline asm
	mov.b32	{%rs3, %rs10}, %r10;
	// inline asm
	{mul.f16 %rs2,%rs3,%rs1;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs8, %f8;}

	// inline asm
	// inline asm
	{mul.f16 %rs9,%rs10,%rs8;
}
	// inline asm
	mov.b32	{%rs7, %rs14}, %r6;
	// inline asm
	{mul.f16 %rs12,%rs9,%rs14;
}
	// inline asm
	// inline asm
	{mul.f16 %rs5,%rs2,%rs7;
}
	// inline asm
	mov.b32	%r14, {%rs5, %rs12};
	// inline asm
	{  cvt.rn.f16.f32 %rs15, %f8;}

	// inline asm
	mov.b32	{%rs17, %rs24}, %r11;
	// inline asm
	{mul.f16 %rs16,%rs17,%rs15;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f8;}

	// inline asm
	// inline asm
	{mul.f16 %rs23,%rs24,%rs22;
}
	// inline asm
	mov.b32	{%rs21, %rs28}, %r7;
	// inline asm
	{mul.f16 %rs26,%rs23,%rs28;
}
	// inline asm
	// inline asm
	{mul.f16 %rs19,%rs16,%rs21;
}
	// inline asm
	mov.b32	%r15, {%rs19, %rs26};
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f8;}

	// inline asm
	mov.b32	{%rs31, %rs38}, %r12;
	// inline asm
	{mul.f16 %rs30,%rs31,%rs29;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f8;}

	// inline asm
	// inline asm
	{mul.f16 %rs37,%rs38,%rs36;
}
	// inline asm
	mov.b32	{%rs35, %rs42}, %r8;
	// inline asm
	{mul.f16 %rs40,%rs37,%rs42;
}
	// inline asm
	// inline asm
	{mul.f16 %rs33,%rs30,%rs35;
}
	// inline asm
	mov.b32	%r16, {%rs33, %rs40};
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f8;}

	// inline asm
	mov.b32	{%rs45, %rs52}, %r13;
	// inline asm
	{mul.f16 %rs44,%rs45,%rs43;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f8;}

	// inline asm
	// inline asm
	{mul.f16 %rs51,%rs52,%rs50;
}
	// inline asm
	mov.b32	{%rs49, %rs56}, %r9;
	// inline asm
	{mul.f16 %rs54,%rs51,%rs56;
}
	// inline asm
	// inline asm
	{mul.f16 %rs47,%rs44,%rs49;
}
	// inline asm
	mov.b32	%r17, {%rs47, %rs54};
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd6;
	mov.b32 	 %f25, %r17;
	mov.b32 	 %f26, %r16;
	mov.b32 	 %f27, %r15;
	mov.b32 	 %f28, %r14;
	st.global.v4.f32 	[%rd10], {%f28, %f27, %f26, %f25};
	ret;
}


