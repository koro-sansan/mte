//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0
// _ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared has been demoted

.visible .entry Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0(
	.param .u64 Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_0,
	.param .u64 Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_1,
	.param .u64 Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_2,
	.param .u64 Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_3,
	.param .u64 Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<20>;
	// demoted variable
	.shared .align 4 .b8 _ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared[16];

	ld.param.u64 	%rd1, [Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_2];
	ld.param.u64 	%rd4, [Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_3];
	ld.param.u64 	%rd5, [Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0_param_4];
	mov.u32 	%r1, %tid.x;
	setp.gt.s32	%p1, %r1, 3;
	@%p1 bra 	BB0_2;

	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r4, %r3, 2;
	add.s32 	%r5, %r4, %r1;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r5, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	shl.b32 	%r6, %r1, 2;
	mov.u32 	%r7, _ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared;
	add.s32 	%r8, %r7, %r6;
	st.shared.f32 	[%r8], %f1;

BB0_2:
	mov.u32 	%r2, %ctaid.x;
	bar.sync 	0;
	shl.b32 	%r9, %r2, 12;
	cvta.to.global.u64 	%rd9, %rd4;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd11, %rd9, %rd10;
	cvta.to.global.u64 	%rd12, %rd3;
	add.s64 	%rd13, %rd12, %rd10;
	add.s32 	%r10, %r1, %r9;
	cvta.to.global.u64 	%rd14, %rd2;
	mul.wide.s32 	%rd15, %r10, 4;
	add.s64 	%rd16, %rd14, %rd15;
	ld.shared.f32 	%f6, [_ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared];
	fma.rn.f32 	%f7, %f6, 0f3A800000, 0f33D6BF95;
	sqrt.rn.f32 	%f8, %f7;
	rcp.rn.f32 	%f9, %f8;
	ld.global.nc.f32 	%f10, [%rd16];
	mul.f32 	%f11, %f10, %f9;
	ld.global.nc.f32 	%f12, [%rd11];
	ld.global.nc.f32 	%f13, [%rd13];
	fma.rn.f32 	%f2, %f11, %f12, %f13;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f2;}

	// inline asm
	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r10, 2;
	add.s64 	%rd19, %rd17, %rd18;
	st.global.u16 	[%rd19], %rs1;
	ld.shared.f32 	%f14, [_ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared+4];
	fma.rn.f32 	%f15, %f14, 0f3A800000, 0f33D6BF95;
	sqrt.rn.f32 	%f16, %f15;
	rcp.rn.f32 	%f17, %f16;
	ld.global.nc.f32 	%f18, [%rd16+4096];
	mul.f32 	%f19, %f18, %f17;
	fma.rn.f32 	%f3, %f19, %f12, %f13;
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f3;}

	// inline asm
	st.global.u16 	[%rd19+2048], %rs2;
	ld.shared.f32 	%f20, [_ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared+8];
	fma.rn.f32 	%f21, %f20, 0f3A800000, 0f33D6BF95;
	sqrt.rn.f32 	%f22, %f21;
	rcp.rn.f32 	%f23, %f22;
	ld.global.nc.f32 	%f24, [%rd16+8192];
	mul.f32 	%f25, %f24, %f23;
	fma.rn.f32 	%f4, %f25, %f12, %f13;
	// inline asm
	{  cvt.rn.f16.f32 %rs3, %f4;}

	// inline asm
	st.global.u16 	[%rd19+4096], %rs3;
	ld.shared.f32 	%f26, [_ZZ70Fused_Mul_Add_Rsqrt_Mul_Mul_Add_Cast_split_1135560474305806017_kernel0E14input_0_shared+12];
	fma.rn.f32 	%f27, %f26, 0f3A800000, 0f33D6BF95;
	sqrt.rn.f32 	%f28, %f27;
	rcp.rn.f32 	%f29, %f28;
	ld.global.nc.f32 	%f30, [%rd16+12288];
	mul.f32 	%f31, %f30, %f29;
	fma.rn.f32 	%f5, %f31, %f12, %f13;
	// inline asm
	{  cvt.rn.f16.f32 %rs4, %f5;}

	// inline asm
	st.global.u16 	[%rd19+6144], %rs4;
	bar.sync 	0;
	ret;
}


