//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0

.visible .entry Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0(
	.param .u64 Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_0,
	.param .u64 Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_1,
	.param .u64 Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_2
)
{
	.reg .b16 	%rs<21>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_Cast_BiasAdd_fusion_3888131049623866140_kernel0_param_2];
	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd2;
	mov.u32 	%r1, %ctaid.y;
	shl.b32 	%r2, %r1, 14;
	mov.u32 	%r3, %tid.x;
	shr.s32 	%r4, %r3, 31;
	shr.u32 	%r5, %r4, 24;
	add.s32 	%r6, %r3, %r5;
	shl.b32 	%r7, %r6, 4;
	and.b32  	%r8, %r7, -4096;
	add.s32 	%r9, %r8, %r2;
	mov.u32 	%r10, %ctaid.x;
	shl.b32 	%r11, %r10, 10;
	add.s32 	%r12, %r9, %r11;
	and.b32  	%r13, %r6, 1073741568;
	sub.s32 	%r14, %r3, %r13;
	shl.b32 	%r15, %r14, 2;
	add.s32 	%r16, %r12, %r15;
	mul.wide.s32 	%rd6, %r16, 2;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.v4.u16 	{%rs17, %rs18, %rs19, %rs20}, [%rd7];
	add.s32 	%r17, %r15, %r11;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd4, %rd8;
	ld.global.nc.v4.f32 	{%f5, %f6, %f7, %f8}, [%rd9];
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f5;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs5, %f6;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs9, %f7;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs13, %f8;}

	// inline asm
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd6;
	// inline asm
	{add.f16 %rs14,%rs20,%rs13;
}
	// inline asm
	// inline asm
	{add.f16 %rs10,%rs19,%rs9;
}
	// inline asm
	// inline asm
	{add.f16 %rs6,%rs18,%rs5;
}
	// inline asm
	// inline asm
	{add.f16 %rs2,%rs17,%rs1;
}
	// inline asm
	st.global.v4.u16 	[%rd11], {%rs2, %rs6, %rs10, %rs14};
	ret;
}


