//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0

.visible .entry Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0(
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_0,
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_1,
	.param .u64 Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<73>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_Cast_Reshape_Sub_Mul_split_Cast_Reshape_Sub_Mul_split_parallel_5394649895204708522_kernel0_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %ctaid.x;
	setp.lt.s32	%p1, %r1, 384;
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r2, %r5, 2;
	mul.hi.s32 	%r6, %r1, 715827883;
	shr.u32 	%r7, %r6, 31;
	shr.u32 	%r8, %r6, 6;
	add.s32 	%r9, %r8, %r7;
	mul.lo.s32 	%r10, %r9, 384;
	sub.s32 	%r11, %r1, %r10;
	shl.b32 	%r3, %r11, 10;
	shr.s32 	%r12, %r5, 31;
	shr.u32 	%r13, %r12, 24;
	add.s32 	%r14, %r5, %r13;
	and.b32  	%r15, %r14, 1073741568;
	sub.s32 	%r16, %r5, %r15;
	shl.b32 	%r4, %r16, 2;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd10, %rd2;
	shl.b32 	%r27, %r1, 10;
	add.s32 	%r28, %r2, %r27;
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.nc.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd12];
	mov.f32 	%f26, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f26;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f29;}

	// inline asm
	// inline asm
	{sub.f16 %rs39,%rs37,%rs38;
}
	// inline asm
	mov.f32 	%f28, 0fC61C4000;
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f28;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f26;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f30;}

	// inline asm
	// inline asm
	{sub.f16 %rs48,%rs46,%rs47;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f28;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f26;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f31;}

	// inline asm
	// inline asm
	{sub.f16 %rs57,%rs55,%rs56;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f28;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f26;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f32;}

	// inline asm
	// inline asm
	{sub.f16 %rs66,%rs64,%rs65;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f28;}

	// inline asm
	add.s32 	%r29, %r4, %r3;
	mul.wide.s32 	%rd13, %r29, 2;
	add.s64 	%rd14, %rd10, %rd13;
	// inline asm
	{mul.f16 %rs70,%rs66,%rs69;
}
	// inline asm
	// inline asm
	{mul.f16 %rs61,%rs57,%rs60;
}
	// inline asm
	// inline asm
	{mul.f16 %rs52,%rs48,%rs51;
}
	// inline asm
	// inline asm
	{mul.f16 %rs43,%rs39,%rs42;
}
	// inline asm
	st.global.v4.u16 	[%rd14], {%rs43, %rs52, %rs61, %rs70};
	bra.uni 	BB0_3;

BB0_1:
	cvta.to.global.u64 	%rd5, %rd3;
	add.s32 	%r17, %r3, %r2;
	mul.wide.s32 	%rd6, %r17, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.nc.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd7];
	mov.f32 	%f10, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f10;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f13;}

	// inline asm
	// inline asm
	{sub.f16 %rs3,%rs1,%rs2;
}
	// inline asm
	mov.f32 	%f12, 0fC61C4000;
	// inline asm
	{  cvt.rn.f16.f32 %rs6, %f12;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs10, %f10;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs11, %f14;}

	// inline asm
	// inline asm
	{sub.f16 %rs12,%rs10,%rs11;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs15, %f12;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f10;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f15;}

	// inline asm
	// inline asm
	{sub.f16 %rs21,%rs19,%rs20;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f12;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f10;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f16;}

	// inline asm
	// inline asm
	{sub.f16 %rs30,%rs28,%rs29;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f12;}

	// inline asm
	add.s32 	%r18, %r1, -384;
	mul.hi.s32 	%r19, %r18, 715827883;
	shr.u32 	%r20, %r19, 31;
	shr.u32 	%r21, %r19, 6;
	add.s32 	%r22, %r21, %r20;
	mul.lo.s32 	%r23, %r22, 384;
	sub.s32 	%r24, %r18, %r23;
	shl.b32 	%r25, %r24, 10;
	add.s32 	%r26, %r4, %r25;
	mul.wide.s32 	%rd8, %r26, 2;
	add.s64 	%rd9, %rd5, %rd8;
	// inline asm
	{mul.f16 %rs34,%rs30,%rs33;
}
	// inline asm
	// inline asm
	{mul.f16 %rs25,%rs21,%rs24;
}
	// inline asm
	// inline asm
	{mul.f16 %rs16,%rs12,%rs15;
}
	// inline asm
	// inline asm
	{mul.f16 %rs7,%rs3,%rs6;
}
	// inline asm
	st.global.v4.u16 	[%rd9], {%rs7, %rs16, %rs25, %rs34};

BB0_3:
	ret;
}


