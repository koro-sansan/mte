//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0

.visible .entry Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0(
	.param .u64 Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_0,
	.param .u64 Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_1,
	.param .u64 Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_2,
	.param .u64 Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<33>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_0];
	ld.param.u64 	%rd13, [Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_1];
	ld.param.u64 	%rd14, [Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_2];
	ld.param.u64 	%rd15, [Fused_Mul_Add_Cast_ReduceMax_split_13010326418165886281_kernel0_param_3];
	cvta.to.global.u64 	%rd1, %rd14;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 10;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r10, %r8, %r9;
	cvta.to.global.u64 	%rd16, %rd15;
	mul.wide.s32 	%rd17, %r10, 4;
	add.s64 	%rd2, %rd16, %rd17;
	ld.global.f32 	%f16, [%rd2];
	shl.b32 	%r11, %r9, 4;
	mad.lo.s32 	%r12, %r7, 16384, %r11;
	cvt.s64.s32	%rd18, %r12;
	neg.s64 	%rd27, %rd18;
	cvta.to.global.u64 	%rd19, %rd13;
	mul.wide.s32 	%rd20, %r12, 2;
	add.s64 	%rd26, %rd19, %rd20;
	shl.b32 	%r13, %r9, 1;
	and.b32  	%r14, %r13, -256;
	mad.lo.s32 	%r15, %r7, 2048, %r14;
	and.b32  	%r16, %r9, 15;
	mad.lo.s32 	%r17, %r16, 16, %r15;
	cvta.to.global.u64 	%rd21, %rd12;
	mul.wide.s32 	%rd22, %r17, 2;
	add.s64 	%rd25, %rd21, %rd22;
	mov.u32 	%r18, 0;
	mov.u32 	%r19, %r18;

BB0_1:
	setp.eq.s32	%p1, %r19, 0;
	selp.f32	%f12, 0fFF7FFFFD, %f16, %p1;
	mov.f32 	%f10, 0f3E000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f10;}

	// inline asm
	ld.global.nc.u16 	%rs3, [%rd26];
	// inline asm
	{mul.f16 %rs2,%rs3,%rs1;
}
	// inline asm
	ld.global.nc.u16 	%rs6, [%rd25];
	// inline asm
	{add.f16 %rs5,%rs6,%rs2;
}
	// inline asm
	// inline asm
	{  cvt.f32.f16 %f5, %rs5;}

	// inline asm
	shl.b64 	%rd23, %rd27, 2;
	sub.s64 	%rd24, %rd1, %rd23;
	st.global.f32 	[%rd24], %f5;
	max.f32 	%f13, %f12, %f5;
	// inline asm
	{  cvt.rn.f16.f32 %rs9, %f10;}

	// inline asm
	ld.global.nc.u16 	%rs11, [%rd26+2];
	// inline asm
	{mul.f16 %rs10,%rs11,%rs9;
}
	// inline asm
	ld.global.nc.u16 	%rs14, [%rd25+2];
	// inline asm
	{add.f16 %rs13,%rs14,%rs10;
}
	// inline asm
	// inline asm
	{  cvt.f32.f16 %f7, %rs13;}

	// inline asm
	st.global.f32 	[%rd24+4], %f7;
	max.f32 	%f14, %f13, %f7;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f10;}

	// inline asm
	ld.global.nc.u16 	%rs19, [%rd26+4];
	// inline asm
	{mul.f16 %rs18,%rs19,%rs17;
}
	// inline asm
	ld.global.nc.u16 	%rs22, [%rd25+4];
	// inline asm
	{add.f16 %rs21,%rs22,%rs18;
}
	// inline asm
	// inline asm
	{  cvt.f32.f16 %f9, %rs21;}

	// inline asm
	st.global.f32 	[%rd24+8], %f9;
	max.f32 	%f15, %f14, %f9;
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f10;}

	// inline asm
	ld.global.nc.u16 	%rs27, [%rd26+6];
	// inline asm
	{mul.f16 %rs26,%rs27,%rs25;
}
	// inline asm
	ld.global.nc.u16 	%rs30, [%rd25+6];
	// inline asm
	{add.f16 %rs29,%rs30,%rs26;
}
	// inline asm
	// inline asm
	{  cvt.f32.f16 %f11, %rs29;}

	// inline asm
	st.global.f32 	[%rd24+12], %f11;
	max.f32 	%f16, %f15, %f11;
	add.s32 	%r19, %r19, 4;
	add.s32 	%r18, %r18, -4;
	add.s64 	%rd27, %rd27, -4;
	add.s64 	%rd26, %rd26, 8;
	add.s64 	%rd25, %rd25, 8;
	setp.ne.s32	%p2, %r18, -16;
	@%p2 bra 	BB0_1;

	st.global.f32 	[%rd2], %f16;
	ret;
}


