//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0

.visible .entry Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0(
	.param .u64 Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_0,
	.param .u64 Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_1,
	.param .u64 Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_2
)
{
	.reg .b16 	%rs<73>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_0];
	ld.param.u64 	%rd2, [Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_1];
	ld.param.u64 	%rd3, [Fused_Mul_Cast_Reshape_Sub_Mul_split_16336985209492630799_kernel0_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 10;
	mov.u32 	%r3, %tid.x;
	shr.s32 	%r4, %r3, 31;
	shr.u32 	%r5, %r4, 24;
	add.s32 	%r6, %r3, %r5;
	and.b32  	%r7, %r6, 1073741568;
	sub.s32 	%r8, %r3, %r7;
	shl.b32 	%r9, %r8, 2;
	add.s32 	%r10, %r9, %r2;
	mul.wide.s32 	%rd7, %r10, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd8];
	mov.u32 	%r11, %ctaid.y;
	shl.b32 	%r12, %r11, 21;
	shl.b32 	%r13, %r6, 10;
	and.b32  	%r14, %r13, -262144;
	add.s32 	%r15, %r10, %r12;
	add.s32 	%r16, %r15, %r14;
	mul.wide.s32 	%rd9, %r16, 4;
	add.s64 	%rd10, %rd5, %rd9;
	ld.global.nc.v4.f32 	{%f33, %f34, %f35, %f36}, [%rd10];
	mov.f32 	%f22, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f22;}

	// inline asm
	mul.f32 	%f2, %f33, %f25;
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f2;}

	// inline asm
	// inline asm
	{sub.f16 %rs3,%rs1,%rs2;
}
	// inline asm
	mov.f32 	%f24, 0fC61C4000;
	// inline asm
	{  cvt.rn.f16.f32 %rs6, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs10, %f22;}

	// inline asm
	mul.f32 	%f5, %f34, %f26;
	// inline asm
	{  cvt.rn.f16.f32 %rs11, %f5;}

	// inline asm
	// inline asm
	{sub.f16 %rs12,%rs10,%rs11;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs15, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f22;}

	// inline asm
	mul.f32 	%f8, %f35, %f27;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f8;}

	// inline asm
	// inline asm
	{sub.f16 %rs21,%rs19,%rs20;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f22;}

	// inline asm
	mul.f32 	%f11, %f36, %f28;
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f11;}

	// inline asm
	// inline asm
	{sub.f16 %rs30,%rs28,%rs29;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f24;}

	// inline asm
	mul.wide.s32 	%rd11, %r16, 2;
	add.s64 	%rd12, %rd4, %rd11;
	// inline asm
	{mul.f16 %rs34,%rs30,%rs33;
}
	// inline asm
	// inline asm
	{mul.f16 %rs25,%rs21,%rs24;
}
	// inline asm
	// inline asm
	{mul.f16 %rs16,%rs12,%rs15;
}
	// inline asm
	// inline asm
	{mul.f16 %rs7,%rs3,%rs6;
}
	// inline asm
	st.global.v4.u16 	[%rd12], {%rs7, %rs16, %rs25, %rs34};
	ld.global.nc.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd10+4194304];
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f22;}

	// inline asm
	mul.f32 	%f14, %f41, %f25;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f14;}

	// inline asm
	// inline asm
	{sub.f16 %rs39,%rs37,%rs38;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f22;}

	// inline asm
	mul.f32 	%f17, %f42, %f26;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f17;}

	// inline asm
	// inline asm
	{sub.f16 %rs48,%rs46,%rs47;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f22;}

	// inline asm
	mul.f32 	%f20, %f43, %f27;
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f20;}

	// inline asm
	// inline asm
	{sub.f16 %rs57,%rs55,%rs56;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f24;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f22;}

	// inline asm
	mul.f32 	%f23, %f44, %f28;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f23;}

	// inline asm
	// inline asm
	{sub.f16 %rs66,%rs64,%rs65;
}
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f24;}

	// inline asm
	// inline asm
	{mul.f16 %rs70,%rs66,%rs69;
}
	// inline asm
	// inline asm
	{mul.f16 %rs61,%rs57,%rs60;
}
	// inline asm
	// inline asm
	{mul.f16 %rs52,%rs48,%rs51;
}
	// inline asm
	// inline asm
	{mul.f16 %rs43,%rs39,%rs42;
}
	// inline asm
	st.global.v4.u16 	[%rd12+2097152], {%rs43, %rs52, %rs61, %rs70};
	ret;
}


