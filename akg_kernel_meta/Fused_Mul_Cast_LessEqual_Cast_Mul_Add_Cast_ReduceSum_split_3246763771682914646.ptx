//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29190527
// Cuda compilation tools, release 11.1, V11.1.105
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_80
.address_size 64

	// .globl	Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0
// _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E96T_cast_T_add_T_multiply_T_multiply_input_1_T_cast_T_less_equal_T_cast_input_2_input_9_red_shared has been demoted
// _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E8red_buf0 has been demoted

.visible .entry Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0(
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_0,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_1,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_2,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_3,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_4,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_5,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_6,
	.param .u64 Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_7
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<35>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<27>;
	// demoted variable
	.shared .align 4 .b8 _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E96T_cast_T_add_T_multiply_T_multiply_input_1_T_cast_T_less_equal_T_cast_input_2_input_9_red_shared[32];
	// demoted variable
	.shared .align 4 .b8 _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E8red_buf0[4096];

	ld.param.u64 	%rd14, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_0];
	ld.param.u64 	%rd15, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_1];
	ld.param.u64 	%rd16, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_2];
	ld.param.u64 	%rd13, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_3];
	ld.param.u64 	%rd17, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_5];
	ld.param.u64 	%rd18, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_6];
	ld.param.u64 	%rd19, [Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0_param_7];
	cvta.to.global.u64 	%rd1, %rd18;
	cvta.to.global.u64 	%rd2, %rd14;
	cvta.to.global.u64 	%rd3, %rd15;
	cvta.to.global.u64 	%rd4, %rd19;
	cvta.to.global.u64 	%rd5, %rd16;
	cvta.to.global.u64 	%rd6, %rd17;
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 10;
	shl.b32 	%r16, %r1, 2;
	mov.u32 	%r17, _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E96T_cast_T_add_T_multiply_T_multiply_input_1_T_cast_T_less_equal_T_cast_input_2_input_9_red_shared;
	add.s32 	%r3, %r17, %r16;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r4, 8192, %r5;
	mad.lo.s32 	%r53, %r1, 1024, %r6;
	mov.u32 	%r54, 0;

BB0_1:
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd7, %rd5, %rd20;
	ld.global.nc.f32 	%f2, [%rd7];
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f2;}

	// inline asm
	mov.f32 	%f3, 0f3F4CC000;
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f3;}

	// inline asm
	// inline asm
	{ .reg .pred __$temp3;
  setp.le.f16  __$temp3, %rs1, %rs2;
  selp.u16 %rs3, 1, 0, __$temp3;}
	// inline asm
	setp.ne.s16	%p2, %rs3, 0;
	selp.u32	%r18, 1, 0, %p2;
	// inline asm
	cvt.rn.f16.s32 %rs6, %r18;
	// inline asm
	mul.wide.s32 	%rd21, %r53, 2;
	add.s64 	%rd8, %rd4, %rd21;
	st.global.u16 	[%rd8], %rs6;
	mov.f32 	%f4, 0f3FA00000;
	// inline asm
	{  cvt.rn.f16.f32 %rs7, %f4;}

	// inline asm
	add.s64 	%rd9, %rd3, %rd21;
	ld.global.nc.u16 	%rs9, [%rd9];
	// inline asm
	{mul.f16 %rs8,%rs9,%rs7;
}
	// inline asm
	// inline asm
	{mul.f16 %rs11,%rs8,%rs6;
}
	// inline asm
	add.s64 	%rd10, %rd2, %rd21;
	ld.global.nc.u16 	%rs16, [%rd10];
	// inline asm
	{add.f16 %rs14,%rs11,%rs16;
}
	// inline asm
	add.s64 	%rd11, %rd1, %rd21;
	st.global.u16 	[%rd11], %rs14;
	// inline asm
	{  cvt.f32.f16 %f5, %rs14;}

	// inline asm
	add.s64 	%rd12, %rd6, %rd20;
	st.global.f32 	[%rd12], %f5;
	or.b32  	%r19, %r5, %r54;
	setp.ne.s32	%p3, %r19, 0;
	@%p3 bra 	BB0_3;

	mov.u32 	%r20, 0;
	st.shared.u32 	[%r3], %r20;

BB0_3:
	ld.global.nc.f32 	%f6, [%rd7+512];
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f6;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f3;}

	// inline asm
	// inline asm
	{ .reg .pred __$temp3;
  setp.le.f16  __$temp3, %rs18, %rs19;
  selp.u16 %rs20, 1, 0, __$temp3;}
	// inline asm
	setp.ne.s16	%p4, %rs20, 0;
	selp.u32	%r21, 1, 0, %p4;
	// inline asm
	cvt.rn.f16.s32 %rs23, %r21;
	// inline asm
	st.global.u16 	[%rd8+256], %rs23;
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f4;}

	// inline asm
	ld.global.nc.u16 	%rs26, [%rd9+256];
	// inline asm
	{mul.f16 %rs25,%rs26,%rs24;
}
	// inline asm
	// inline asm
	{mul.f16 %rs28,%rs25,%rs23;
}
	// inline asm
	ld.global.nc.u16 	%rs33, [%rd10+256];
	// inline asm
	{add.f16 %rs31,%rs28,%rs33;
}
	// inline asm
	st.global.u16 	[%rd11+256], %rs31;
	// inline asm
	{  cvt.f32.f16 %f9, %rs31;}

	// inline asm
	st.global.f32 	[%rd12+512], %f9;
	add.s32 	%r54, %r54, 2;
	add.s32 	%r53, %r53, 256;
	setp.ne.s32	%p5, %r54, 8;
	@%p5 bra 	BB0_1;

	bar.sync 	0;
	add.s32 	%r22, %r6, %r2;
	mul.wide.s32 	%rd22, %r22, 4;
	add.s64 	%rd23, %rd6, %rd22;
	ld.global.f32 	%f10, [%rd23];
	add.f32 	%f11, %f10, 0f00000000;
	sub.f32 	%f12, %f11, %f10;
	ld.global.f32 	%f13, [%rd23+512];
	sub.f32 	%f14, %f13, %f12;
	add.f32 	%f15, %f11, %f14;
	sub.f32 	%f16, %f15, %f11;
	sub.f32 	%f17, %f16, %f14;
	ld.global.f32 	%f18, [%rd23+1024];
	sub.f32 	%f19, %f18, %f17;
	add.f32 	%f20, %f15, %f19;
	sub.f32 	%f21, %f20, %f15;
	sub.f32 	%f22, %f21, %f19;
	ld.global.f32 	%f23, [%rd23+1536];
	sub.f32 	%f24, %f23, %f22;
	add.f32 	%f25, %f20, %f24;
	sub.f32 	%f26, %f25, %f20;
	sub.f32 	%f27, %f26, %f24;
	ld.global.f32 	%f28, [%rd23+2048];
	sub.f32 	%f29, %f28, %f27;
	add.f32 	%f30, %f25, %f29;
	sub.f32 	%f31, %f30, %f25;
	sub.f32 	%f32, %f31, %f29;
	ld.global.f32 	%f33, [%rd23+2560];
	sub.f32 	%f34, %f33, %f32;
	add.f32 	%f35, %f30, %f34;
	sub.f32 	%f36, %f35, %f30;
	sub.f32 	%f37, %f36, %f34;
	ld.global.f32 	%f38, [%rd23+3072];
	sub.f32 	%f39, %f38, %f37;
	add.f32 	%f40, %f35, %f39;
	sub.f32 	%f41, %f40, %f35;
	sub.f32 	%f42, %f41, %f39;
	ld.global.f32 	%f43, [%rd23+3584];
	sub.f32 	%f44, %f43, %f42;
	add.f32 	%f45, %f40, %f44;
	mov.u32 	%r23, %ntid.x;
	mad.lo.s32 	%r24, %r23, %r1, %r5;
	and.b32  	%r12, %r24, 127;
	and.b32  	%r13, %r24, -128;
	add.s32 	%r25, %r13, %r12;
	shl.b32 	%r26, %r25, 2;
	mov.u32 	%r27, _ZZ86Fused_Mul_Cast_LessEqual_Cast_Mul_Add_Cast_ReduceSum_split_3246763771682914646_kernel0E8red_buf0;
	add.s32 	%r14, %r27, %r26;
	st.shared.f32 	[%r14], %f45;
	bar.sync 	0;
	setp.gt.u32	%p6, %r12, 63;
	@%p6 bra 	BB0_6;

	ld.shared.f32 	%f46, [%r14];
	ld.shared.f32 	%f47, [%r14+256];
	add.f32 	%f48, %f46, %f47;
	st.shared.f32 	[%r14], %f48;

BB0_6:
	bar.sync 	0;
	setp.gt.u32	%p7, %r12, 31;
	@%p7 bra 	BB0_8;

	ld.shared.f32 	%f49, [%r14];
	ld.shared.f32 	%f50, [%r14+128];
	add.f32 	%f51, %f49, %f50;
	st.shared.f32 	[%r14], %f51;

BB0_8:
	setp.lt.u32	%p1, %r12, 32;
	bar.sync 	0;
	@!%p1 bra 	BB0_11;
	bra.uni 	BB0_9;

BB0_9:
	ld.shared.f32 	%f52, [%r14];
	mov.b32 	 %r28, %f52;
	mov.u32 	%r29, 2;
	mov.u32 	%r30, 31;
	mov.u32 	%r31, 16;
	mov.u32 	%r32, -1;
	shfl.sync.down.b32 	%r33|%p8, %r28, %r31, %r30, %r32;
	mov.b32 	 %f53, %r33;
	add.f32 	%f54, %f52, %f53;
	mov.b32 	 %r34, %f54;
	mov.u32 	%r35, 8;
	shfl.sync.down.b32 	%r36|%p9, %r34, %r35, %r30, %r32;
	mov.b32 	 %f55, %r36;
	add.f32 	%f56, %f54, %f55;
	mov.b32 	 %r37, %f56;
	mov.u32 	%r38, 4;
	shfl.sync.down.b32 	%r39|%p10, %r37, %r38, %r30, %r32;
	mov.b32 	 %f57, %r39;
	add.f32 	%f58, %f56, %f57;
	mov.b32 	 %r40, %f58;
	shfl.sync.down.b32 	%r41|%p11, %r40, %r29, %r30, %r32;
	mov.b32 	 %f59, %r41;
	add.f32 	%f60, %f58, %f59;
	mov.b32 	 %r42, %f60;
	mov.u32 	%r43, 1;
	shfl.sync.down.b32 	%r44|%p12, %r42, %r43, %r30, %r32;
	mov.b32 	 %f61, %r44;
	add.f32 	%f1, %f60, %f61;
	setp.ne.s32	%p13, %r12, 0;
	@%p13 bra 	BB0_11;

	st.shared.f32 	[%r14], %f1;

BB0_11:
	bar.sync 	0;
	setp.ne.s32	%p14, %r12, 0;
	@%p14 bra 	BB0_13;

	shl.b32 	%r45, %r13, 2;
	add.s32 	%r47, %r27, %r45;
	ld.shared.f32 	%f62, [%r47];
	ld.shared.f32 	%f63, [%r3];
	add.f32 	%f64, %f63, %f62;
	st.shared.f32 	[%r3], %f64;

BB0_13:
	bar.sync 	0;
	setp.eq.s32	%p15, %r1, 0;
	setp.lt.s32	%p16, %r5, 8;
	and.pred  	%p17, %p16, %p15;
	@!%p17 bra 	BB0_15;
	bra.uni 	BB0_14;

BB0_14:
	shl.b32 	%r48, %r5, 2;
	add.s32 	%r50, %r17, %r48;
	ld.shared.f32 	%f65, [%r50];
	shl.b32 	%r51, %r4, 3;
	add.s32 	%r52, %r51, %r5;
	cvta.to.global.u64 	%rd24, %rd13;
	mul.wide.s32 	%rd25, %r52, 4;
	add.s64 	%rd26, %rd24, %rd25;
	st.global.f32 	[%rd26], %f65;

BB0_15:
	bar.sync 	0;
	ret;
}


